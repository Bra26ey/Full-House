name: CI

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Qt
        uses: jurplel/install-qt-action@v2

      - name: Create WD
        working-directory: ${{runner.workspace}}/Full-House/App
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: mkdir build


      - name: Build cmake
        working-directory: ${{runner.workspace}}/Full-House/App/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake ..


      - name: Build make
        working-directory: ${{runner.workspace}}/Full-House/App/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: make
        
      - name: cppcheck
        uses: deep5050/cppcheck-action@master
        with:
          exclude_check: ./build
          enable : warning,style ,performance,portability,unusedFunction,missingInclude
          inconclusive : disable

      - name: Test
        working-directory: ${{runner.workspace}}/Full-House/App/build
        shell: bash
        run: ctest

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

